
Assignment – 13
Using the UNION clause.


1) Create a union of two queries that shows the names, cities, and ratings of all
customers. Those with rating of 200 or greater will also have the words “High
Rating”, while the others will have the words “Low Rating”.

mysql> select Cname, City, Rating, 'High Rating' as Rating from Customers where Rating >= 200 UNION select Cname, City, Rating, 'Low Rating' as Ratings from Customers where Rating < 200;
+----------+----------+--------+-------------+
| Cname    | City     | Rating | Rating      |
+----------+----------+--------+-------------+
| Giovanni | Rome     |    200 | High Rating |
| Liu      | San Jose |    200 | High Rating |
| Grass    | Berlin   |    300 | High Rating |
| Cisneros | San Jose |    300 | High Rating |
| Hoffman  | London   |    100 | Low Rating  |
| Clemens  | London   |    100 | Low Rating  |
| Pereira  | Rome     |    100 | Low Rating  |
+----------+----------+----

2) Write a command that produces the name and number of each salesperson and
each customer with more than one current order. Put the results in alphabetical
order.

mysql> select sales.Sname as name, sales.Snum from Salespeople sales JOIN Orders ord1 on sales.Snum = ord1.Snum
    -> group by sales.Snum, sales.Sname having count(ord1.Onum) > 1
    -> UNION
    -> select cust.Cname as name, cust.Cnum from Customers cust join Orders ord2 on cust.Cnum = ord2.Cnum
    -> group by cust.Cnum, cust.Cname having count(ord2.Onum) > 1
    -> order by name;
+----------+------+
| name     | Snum |
+----------+------+
| Cisneros | 2008 |
| Clemens  | 2006 |
| Grass    | 2004 |
| Peel     | 1001 |
| Rifkin   | 1007 |
| Serres   | 1002 |
+----------+------+
6 rows in set (0.00 sec)

3) Form a union of three queries. Have the first select the snums of all salespeople in
San Jose; the second, the cnums of all customers in San Jose; and the third the
onums of all orders on October 3. Retain duplicates between the last two queries
but eliminate any redundancies between either of them and the first.
(Note: in the sample tables as given, there would be no such redundancy. This is
besides the point.)

mysql> select s.Snum from salespeople s where s.City = 'San Jose'
    -> UNION ALL
    -> select c.Cnum from Customers c where c.City = 'San Jose'
    -> UNION ALL
    -> select o.onum from Orders o where o.Odate = '1990-10-03';
+------+
| Snum |
+------+
| 1002 |
| 2003 |
| 2008 |
| 3001 |
| 3003 |
| 3002 |
| 3005 |
| 3006 |
+------+
8 rows in set (0.01 sec)

